#⦁	Given an positive integer n, if you apply the following rules iteratively, you will eventually get a 1.
#n---> n/2 (if n is even)
#n---> 3*n+1 (if n is odd)
#for example input 13
#[13, 40, 20, 10, 5, 16, 8, 4, 2, 1]
'''
Num=(int(input("Enter a positive number:")))
print("you have entered:",Num)
while Num > 1:
    if Num %2==0:
        Num=Num/2
    else:
        Num=(3*Num)+1
    print(Num)
'''
#Following are the criteria for checking the password:
#I. At least 1 letter between [a-z]
#II. At least 1 number between [0-9]
#III. At least 1 letter between [A-Z]
#IV. At least 1 character from [$#@]
#4. Minimum length of transaction password: 6
#5. Maximum length of transaction password: 12
#Your program should accept a sequence of comma separated passwords and will check them according to the above criteria. Passwords that match the criteria are to be printed, each separated by a comma.
#Example
#If the following passwords are given as input to the program:
#ABd1234@1, a F1#,2w3E*, 2We3345
#Then, the output of the program should be:
#ABd1234@1

import re
userName=input("Enetr your User Name: ")
passWord=input("Enter your passwords by comma seperation:")
passwordList=passWord.split(",")
print(passwordList)
for passWord in passwordList:
    if re.search('[A-Za-z0-9@#$]{6,12}', passWord):
     print(passWord)

#⦁	The denominations in Indian currency are: |1, |2, |5, |10, |,20, |50, |100, |200, |500, |2000.
# Given an amount N, print how many coins/notes make up N Sample input: Enter the amount: 2640 Output:
               #2000  1
               #500  1
              # 100  1
               #10    4
             #Also test your program with N=3781, 4928, and 5134
'''

N=int(input("Enter Money "))
while True:
    if N>2000:
        a=N//2000
        N=N%2000
        print("2000 ",a)
    elif N>500:
        b=N//500
        N=N%500
        print("500 ", b)
    elif N>200:
        b=N//200
        N=N%200
        print("200 ", b)
    elif N>100:
        b=N//100
        N=N%100
        print("100 ", b)
    elif N>50:
        b=N//50
        N=N%50
        print("50 ", b)
    elif N>20:
        b=N//20
        N=N%20
        print("20 ", b)
    elif N>10:
        b=N//10
        N=N%10
        print("10 ", b)
    elif N>5:
        b=N//5
        N=N%5
        print("5 ", b)
    elif N>2:
        b=N//2
        N=N%2
        print("2 ", b)
    elif N>=1:
        b=N//1
        N=N%1
        print("1", b)
'''
#4.Create a simple calculator GUI app using TKinter framework.
'''
from tkinter import *
expression = ""
def press(num):
	global expression
	expression = expression + str(num)
	equation.set(expression)

def equalpress():
	try:

		global expression

		total = str(eval(expression))

		equation.set(total)
		expression = ""
	except:

		equation.set(" error ")
		expression = ""

def clear():
	global expression
	expression = ""
	equation.set("")

if __name__ == "__main__":
	gui = Tk()
	gui.configure(background="light green")
	gui.title("Simple Calculator")
	gui.geometry("270x150")
	equation = StringVar()

	expression_field = Entry(gui, textvariable=equation)
	expression_field.grid(columnspan=4, ipadx=70)

	button1 = Button(gui, text=' 1 ', fg='black', bg='red',
					command=lambda: press(1), height=1, width=7)
	button1.grid(row=2, column=0)

	button2 = Button(gui, text=' 2 ', fg='black', bg='red',
					command=lambda: press(2), height=1, width=7)
	button2.grid(row=2, column=1)

	button3 = Button(gui, text=' 3 ', fg='black', bg='red',
					command=lambda: press(3), height=1, width=7)
	button3.grid(row=2, column=2)

	button4 = Button(gui, text=' 4 ', fg='black', bg='red',
					command=lambda: press(4), height=1, width=7)
	button4.grid(row=3, column=0)

	button5 = Button(gui, text=' 5 ', fg='black', bg='red',
					command=lambda: press(5), height=1, width=7)
	button5.grid(row=3, column=1)

	button6 = Button(gui, text=' 6 ', fg='black', bg='red',
					command=lambda: press(6), height=1, width=7)
	button6.grid(row=3, column=2)

	button7 = Button(gui, text=' 7 ', fg='black', bg='red',
					command=lambda: press(7), height=1, width=7)
	button7.grid(row=4, column=0)

	button8 = Button(gui, text=' 8 ', fg='black', bg='red',
					command=lambda: press(8), height=1, width=7)
	button8.grid(row=4, column=1)

	button9 = Button(gui, text=' 9 ', fg='black', bg='red',
					command=lambda: press(9), height=1, width=7)
	button9.grid(row=4, column=2)

	button0 = Button(gui, text=' 0 ', fg='black', bg='red',
					command=lambda: press(0), height=1, width=7)
	button0.grid(row=5, column=0)

	plus = Button(gui, text=' + ', fg='black', bg='red',
				command=lambda: press("+"), height=1, width=7)
	plus.grid(row=2, column=3)

	minus = Button(gui, text=' - ', fg='black', bg='red',
				command=lambda: press("-"), height=1, width=7)
	minus.grid(row=3, column=3)

	multiply = Button(gui, text=' * ', fg='black', bg='red',
					command=lambda: press("*"), height=1, width=7)
	multiply.grid(row=4, column=3)

	divide = Button(gui, text=' / ', fg='black', bg='red',
					command=lambda: press("/"), height=1, width=7)
	divide.grid(row=5, column=3)

	equal = Button(gui, text=' = ', fg='black', bg='red',
				command=equalpress, height=1, width=7)
	equal.grid(row=5, column=2)

	clear = Button(gui, text='Clear', fg='black', bg='red',
				command=clear, height=1, width=7)
	clear.grid(row=5, column='1')

	Decimal= Button(gui, text='.', fg='black', bg='red',
					command=lambda: press('.'), height=1, width=7)
	Decimal.grid(row=6, column=0)
	gui.mainloop()
    '''









